<?php
/**
 * File :	LieuRepository.php
 * Bundle : MdyGstBundle
 * Path :	src/Mdy/GstBundle/Entity
 * Since :	--
 * Update :	17/11/2015
 * Author :	R. Threis
 */
namespace Mdy\GstBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * lieuRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LieuRepository extends EntityRepository
{
	public function findForSelect(){
		$qb = $this->createQueryBuilder('l');
		$qb->andWhere($qb->expr()->eq('l.remember', '?1'))
					->setParameter('1', '1')
					->orderBy('l.nom', 'ASC');
		return $qb;
	}
	
	public function findAll(){
		$qb = $this->createQueryBuilder('l');
		$qb->where($qb->expr()->isNull('l.deletedAt'))
				->orderBy('l.nom', 'ASC');
		return $qb;
	}
	
	public function findByLieu(Lieu $lieu){
		$qb = $this->createQueryBuilder('l');
		$nom = $lieu->getNom();
		$rue = $lieu->getRue();
		$numero = $lieu->getNumero();
		if( !empty($nom)){
			$qb->andWhere($qb->expr()->like('l.nom', ':nom'))
				->setParameter('nom', $nom);
		}
		if( !empty($rue)){
			$qb->andWhere($qb->expr()->like('l.rue', ':rue'))
				->setParameter('rue', $rue);
		}
		if( !empty($numero)){
			$qb->andWhere($qb->expr()->like('l.numero', ':numero'))
				->setParameter('numero', $numero);
		}
		return $qb->getQuery()->getResult();
	}
	
	public function findDeleted(){
		$qb = $this->createQueryBuilder('l');
		$qb->where($qb->expr()->isNotNull('l.deletedAt'))
				->orderBy('l.nom', 'ASC');
		return $qb->getQuery()->getResult();
	}
	
	public function findNotDeleted(){
		$qb = $this->createQueryBuilder('l');
		$qb->where($qb->expr()->isNull('l.deletedAt'))
				->orderBy('l.nom', 'ASC');
		return $qb->getQuery()->getResult();
	}
}
